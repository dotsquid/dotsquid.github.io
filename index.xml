<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dotsquid</title>
    <link>http://dotsquid.com/</link>
    <description>Recent content on dotsquid</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Jun 2019 22:14:11 +0200</lastBuildDate>
    
	<atom:link href="http://dotsquid.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simple GPU Occlusion for Lens Flares</title>
      <link>http://dotsquid.com/2019/06/26/simple-gpu-occlusion-for-lens-flares/</link>
      <pubDate>Wed, 26 Jun 2019 22:14:11 +0200</pubDate>
      
      <guid>http://dotsquid.com/2019/06/26/simple-gpu-occlusion-for-lens-flares/</guid>
      <description>&lt;p&gt;One of the interesting problems I had to solve during development of &lt;a href=&#34;https://twitter.com/SummerCatchers&#34; target=&#34;_blank&#34;&gt;Summer Catchers&lt;/a&gt; was implementation of &lt;a href=&#34;https://en.wikipedia.org/wiki/Lens_flare&#34; target=&#34;_blank&#34;&gt;Lens Flares&lt;/a&gt; effect. In this post I&amp;rsquo;d like to share what I came up with (&lt;strong&gt;including an open-source demo&lt;/strong&gt;). Buckle up.&lt;br /&gt;
&lt;div style=&#39;position:relative; padding-bottom:56.25%; max-width:640px; max-height:360px; margin: 0 auto&#39;&gt;&lt;iframe src=&#39;https://gfycat.com/ifr/uncommonwastefulherring?hd=1&#39; frameborder=&#39;0&#39; scrolling=&#39;no&#39; width=&#39;100%&#39; height=&#39;100%&#39; style=&#39;position:absolute;top:0;left:0;&#39; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GrabPass &#43; Dynamic Batching == Friendship ðŸ¤œðŸ¤›</title>
      <link>http://dotsquid.com/2018/01/20/grabpass-batching-trick/</link>
      <pubDate>Sat, 20 Jan 2018 22:42:17 +0200</pubDate>
      
      <guid>http://dotsquid.com/2018/01/20/grabpass-batching-trick/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; the original trick was not working with Unity prior to 2017.2&lt;br /&gt;
But it appeared that the fix is quite simple and now it works fine with the latest versions (tested with 2019.2). Source code is inside.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.unity3d.com/Manual/SL-GrabPass.html&#34; target=&#34;_blank&#34;&gt;GrabPass&lt;/a&gt; is probably the easiest way to get the content of the screen and pass it to the shader automagically. Later you can use this texture to make some nifty effects like distortion and reflection.&lt;br /&gt;
&lt;div style=&#39;position:relative; padding-bottom:56.25%; max-width:640px; max-height:360px; margin: 0 auto&#39;&gt;&lt;iframe src=&#39;https://gfycat.com/ifr/WatchfulComfortableBass&#39; frameborder=&#39;0&#39; scrolling=&#39;no&#39; width=&#39;100%&#39; height=&#39;100%&#39; style=&#39;position:absolute;top:0;left:0;&#39; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;But GrabPass has a huge fault: it breaks the &lt;a href=&#34;https://docs.unity3d.com/Manual/DrawCallBatching.html&#34; target=&#34;_blank&#34;&gt;dynamic batching&lt;/a&gt; ðŸ’”&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Why I don&#39;t like Dictionary.TryGetValue and how I made it better (I hope)</title>
      <link>http://dotsquid.com/2017/05/31/dictionary-trygetvalue/</link>
      <pubDate>Wed, 31 May 2017 21:22:23 +0200</pubDate>
      
      <guid>http://dotsquid.com/2017/05/31/dictionary-trygetvalue/</guid>
      <description>&lt;p&gt;The most annoying thing of &lt;code&gt;Dictionary.TryGetValue&lt;/code&gt; is that it returns a default value of &lt;code&gt;value&lt;/code&gt; parameter if &lt;code&gt;key&lt;/code&gt; is not found. E.g. if &lt;code&gt;value&lt;/code&gt; is of &lt;code&gt;float&lt;/code&gt; type it will be &lt;code&gt;0.0f&lt;/code&gt;.&lt;br /&gt;
Because of that you have to check the returned &lt;code&gt;bool&lt;/code&gt; and if it&amp;rsquo;s &lt;code&gt;false&lt;/code&gt; you have to assign the value you need. It looks as follows&lt;/p&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/dotsquid/dff16aed638d582593e455621176cecd.js?file=Dislike.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;As you can see now we have to deal with redundant &lt;code&gt;if&lt;/code&gt; statement which makes code not so clean and neat as it could be.&lt;br /&gt;
How about this one?&lt;/p&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/dotsquid/dff16aed638d582593e455621176cecd.js?file=Like.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;Fortunately it&amp;rsquo;s quite easy to make it real with an extension class like as follows&lt;/p&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/dotsquid/dff16aed638d582593e455621176cecd.js?file=DictionaryUtility.cs&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>StableEnum or: How I Learned to Stop Worrying and Love the Enums in Unity3d</title>
      <link>http://dotsquid.com/2017/04/17/stable-enum/</link>
      <pubDate>Mon, 17 Apr 2017 23:44:46 +0200</pubDate>
      
      <guid>http://dotsquid.com/2017/04/17/stable-enum/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s a well-known problem with serialization of enums in Unity3d:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use enum as a serialized field in your &lt;code&gt;MonoBehaviour&lt;/code&gt; or &lt;code&gt;ScriptableObject&lt;/code&gt; (or anything serializable).&lt;/li&gt;
&lt;li&gt;Fine-tune everything and code your game further casually.&lt;/li&gt;
&lt;li&gt;Add some new enumerators in the middle of your enum.&lt;/li&gt;
&lt;li&gt;BAM!! You are screwed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What happened? Nothing fancy: new enumerators of your enum just shifted down the old ones occupying their values, because Unity serializes enums as ints.&lt;br /&gt;
Solution is easy: serialize enums as strings. And &lt;a href=&#34;https://github.com/dotsquid/StableEnum&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;StableEnum&lt;/strong&gt;&lt;/a&gt; will help you with this.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nested canvas bug</title>
      <link>http://dotsquid.com/2017/04/08/nested-canvas-bug/</link>
      <pubDate>Sat, 08 Apr 2017 00:30:38 +0300</pubDate>
      
      <guid>http://dotsquid.com/2017/04/08/nested-canvas-bug/</guid>
      <description>&lt;p&gt;Weird bug related to &lt;code&gt;UI.Canvas&lt;/code&gt; was accidentally found by me while I was developing new menu for our upcoming game &lt;a href=&#34;https://twitter.com/SummerCatchers&#34; target=&#34;_blank&#34;&gt;SummerCatchers&lt;/a&gt;. Btw, follow us ;)&lt;br /&gt;
As far as you may know &lt;code&gt;Canvas&lt;/code&gt; can have other &lt;code&gt;Canvases&lt;/code&gt; as children objects. This is very useful in optimization purpose because &lt;code&gt;sub-canvas&lt;/code&gt; isolates its UI elements from other canvases (parent and siblings) thus modifying one of its children won&amp;rsquo;t cause rebuilding of batched mesh for other canvases.&lt;br /&gt;
The bug is as follows.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Enum flags in Unity3d Inspector</title>
      <link>http://dotsquid.com/2017/04/05/enum-flag-attribute-plus-property-drawer/</link>
      <pubDate>Wed, 05 Apr 2017 21:12:16 +0200</pubDate>
      
      <guid>http://dotsquid.com/2017/04/05/enum-flag-attribute-plus-property-drawer/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s quite strange but Unity can&amp;rsquo;t show your enum as bitmask / flags out of the box.&lt;br /&gt;
Fortunately this can be fixed fast and easy.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>git init</title>
      <link>http://dotsquid.com/2017/03/25/git-init/</link>
      <pubDate>Sat, 25 Mar 2017 17:24:46 +0200</pubDate>
      
      <guid>http://dotsquid.com/2017/03/25/git-init/</guid>
      <description>This is it. I joined the dark side and now I have a blog.</description>
    </item>
    
    <item>
      <title>AnimTracer</title>
      <link>http://dotsquid.com/works/anim-tracer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://dotsquid.com/works/anim-tracer/</guid>
      <description>AssetStore AnimTracer is a simple and handy tool for Unity Editor intended to automagically fix animations when the hierarchy of animated GameObject is changed. Reparent, add, delete or rename GameObjects - all changes will be traced.
   
Problem Unity stores paths to animated properties instead of references or GUIDs. That&amp;rsquo;s why when you change the hierarchy of an animated GameObject you can get something like this:   AnimTracer was developed to minimize the efforts required to solve this problem.</description>
    </item>
    
    <item>
      <title>AnimTracer</title>
      <link>http://dotsquid.com/work/anim-tracer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://dotsquid.com/work/anim-tracer/</guid>
      <description>AnimTracer is a simple and handy tool for Unity Editor intended to automagically fix animations when the hierarchy of animated GameObject is changed. Reparent, add, delete or rename GameObjects - all changes will be traced.</description>
    </item>
    
    <item>
      <title>ChronoHelper</title>
      <link>http://dotsquid.com/works/chrono-helper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://dotsquid.com/works/chrono-helper/</guid>
      <description>GithubChangelogAssetStoreForumChronoHelper is a free open-source tool for Unity Editor for controlling TimeScale in PlayMode with ease.
It becomes very handy when it&amp;rsquo;s required to examine a suspicious moment of gameplay in slow-motion or conversely when it&amp;rsquo;s preferable to skip uninteresting part in fast-forward.  
Installation Github Clone repository or download it as archive from https://github.</description>
    </item>
    
    <item>
      <title>ChronoHelper</title>
      <link>http://dotsquid.com/work/chrono-helper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://dotsquid.com/work/chrono-helper/</guid>
      <description>ChronoHelper is a free open-source tool for Unity Editor for controlling TimeScale in PlayMode with ease.
It becomes very handy when it&amp;rsquo;s required to examine a suspicious moment of gameplay in slow-motion or conversely when it&amp;rsquo;s preferable to skip uninteresting part in fast-forward.</description>
    </item>
    
    <item>
      <title>ChronoHelper Plus</title>
      <link>http://dotsquid.com/work/chrono-helper-plus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://dotsquid.com/work/chrono-helper-plus/</guid>
      <description>ChronoHelper Plus is an extended version of ChronoHelper with some extra features.
Coming soon.</description>
    </item>
    
    <item>
      <title>Summer Catchers</title>
      <link>http://dotsquid.com/work/summer-catchers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://dotsquid.com/work/summer-catchers/</guid>
      <description>Summer Catchers takes you in the journey with a little northern girl to the faraway South and summer warm. Prepare for mysterious adventures, weird characters and non-stop riding! Target platforms: Windows, Mac (Steam)
Release date: July 16, 2019
Status: Working hard as a part of four-man team to deliver awesomeness and fun to players.</description>
    </item>
    
    <item>
      <title>about</title>
      <link>http://dotsquid.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://dotsquid.com/about/</guid>
      <description></description>
    </item>
    
    <item>
      <title>contact</title>
      <link>http://dotsquid.com/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://dotsquid.com/contact/</guid>
      <description></description>
    </item>
    
    <item>
      <title>works</title>
      <link>http://dotsquid.com/works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://dotsquid.com/works/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>