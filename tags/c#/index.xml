<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on dotsquid</title>
    <link>https://dotsquid.github.io/tags/c</link>
    <description>Recent content in C# on dotsquid</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Proudly made in [Ukraine](https://en.wikipedia.org/wiki/Ukraine). Powered by [Hugo](//gohugo.io).</copyright>
    <atom:link href="https://dotsquid.github.io/tags/c" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Enum flags in Unity3d Inspector</title>
      <link>https://dotsquid.github.io/2017/04/05/enum-flags-in-unity3d-inspector</link>
      <pubDate>Wed, 05 Apr 2017 21:12:16 +0200</pubDate>
      
      <guid>https://dotsquid.github.io/2017/04/05/enum-flags-in-unity3d-inspector</guid>
      <description>&lt;p&gt;It&amp;rsquo;s quite strange but Unity can&amp;rsquo;t show your enum as bitmask / flags out of the box.&lt;br /&gt;
Fortunately this can be fixed fast and easy.&lt;br /&gt;
&lt;/p&gt;

&lt;h5 id=&#34;step1-attribute&#34;&gt;Step1. Attribute&lt;/h5&gt;

&lt;p&gt;First of all we need an attribute which should inform Unity that we want it to show our enum as flags and not as usual one-option list of enums. That&amp;rsquo;s pretty simple and straightforward.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/dotsquid/9289e275e1a4f5b973416bef00419123.js?file=EnumFlagAttribute.cs&#34;&gt;&lt;/script&gt;

&lt;h5 id=&#34;step2-propertydrawer&#34;&gt;Step2. PropertyDrawer&lt;/h5&gt;

&lt;p&gt;Next part is a custom &lt;code&gt;PropertyDrawer&lt;/code&gt;. Its purpose is to draw a property with which &lt;code&gt;EnumFlagAttribute&lt;/code&gt; was associated.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/dotsquid/9289e275e1a4f5b973416bef00419123.js?file=EnumFlagDrawer.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;Nothing special as well. Maybe except the 11-th line where we receive the value of enum from &lt;code&gt;SerializedProperty&lt;/code&gt;. Unity&amp;rsquo;s documentation lacks detailed information about &lt;code&gt;PropertyDrawer.fieldInfo&lt;/code&gt; but that&amp;rsquo;s one of the ways how to use it.&lt;/p&gt;

&lt;h5 id=&#34;step3-usage&#34;&gt;Step3. Usage&lt;/h5&gt;

&lt;p&gt;Usage is easy peasy. Just associate &lt;code&gt;EnumFlag&lt;/code&gt; attribute with an enum field and enjoy your bitmask in the Inspector.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/dotsquid/9289e275e1a4f5b973416bef00419123.js?file=Usage.cs&#34;&gt;&lt;/script&gt;</description>
    </item>
    
  </channel>
</rss>